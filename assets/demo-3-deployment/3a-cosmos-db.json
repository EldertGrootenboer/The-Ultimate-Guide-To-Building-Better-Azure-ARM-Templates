{
    /*
    What we will be doing in this template.
        1. Update container name: container -> cn
        2. Update default consistency level: Eventual -> Strong
        3. Update Cosmos account type: Non-Production -> Production
    */
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "cosmosDb": {
            "defaultValue": {
                "container": "[concat('cn-', uniqueString(resourceGroup().name))]",
                "database": "[concat('db-', uniqueString(resourceGroup().name))]",
                "name": "[concat('cosmos-arm-in-serverless-world-', uniqueString(resourceGroup().name))]"
            },
            "type": "object"
        },
        "general": {
            "defaultValue": {
                "tags": {
                    "CosmosAccountType": "Production",
                    "LastModifiedDate": "[utcNow()]",
                    "Project": "The Ultimate Guide To Building Better Azure ARM Templates",
                    "Purpose": "Session",
                    "defaultExperience": "Core (SQL)"
                }
            },
            "type": "object"
        },
        "location": {
            "type": "string"
        }
    },
    "resources": [
        // Instance
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "name": "[parameters('cosmosDb').name]",
            "apiVersion": "2020-04-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('general').tags]",
            "kind": "GlobalDocumentDB",
            "properties": {
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Strong",
                    "maxStalenessPrefix": 1,
                    "maxIntervalInSeconds": 5
                },
                "locations": [
                    {
                        "locationName": "[parameters('location')]",
                        "failoverPriority": 0
                    }
                ],
                "databaseAccountOfferType": "Standard",
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "enableFreeTier": false
            }
        },
        // Database
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "name": "[concat(parameters('cosmosDb').name, '/', parameters('cosmosDb').database)]",
            "apiVersion": "2020-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDb').name)]"
            ],
            "properties": {
                "resource": {
                    "id": "[parameters('cosmosDb').database]"
                },
                "options": {}
            }
        },
        // Container
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/sqlDatabases/containers",
            "name": "[concat(parameters('cosmosDb').name, '/', parameters('cosmosDb').database, '/', parameters('cosmosDb').container)]",
            "apiVersion": "2020-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDb').name, parameters('cosmosDb').database)]"
            ],
            "properties": {
                "resource": {
                    "id": "[parameters('cosmosDb').container]"
                },
                "partitionKey": {
                    "paths": [
                        "/EventName"
                    ],
                    "kind": "Hash"
                },
                "options": {}
            }
        }
    ]
}
